#!/bin/bash

# options

#while getopts ":r" option; do
#   case $option in
#      r) # refresh
#	 ~/Workspace/crypto-script/get-crypto-data 2> /dev/null;;
#     \?)
#     	 echo "Error: Invalid option. Use -r to get up-to-date market quotes.";
#	 exit;;
#   esac
#done

~/Workspace/crypto-script/get-crypto-data 2> /dev/null

# currency converter functions
function echoHUF() {
	value=$(echo "$1 * $usdhuf / 1;" | bc);
	echo -n "$value HUF";
}

function echoRON() {
	value=$(echo "$1 * $usdron / 1;" | bc);
	echo -n "$value RON";
}

# API DATA
# market prices in USD
priceBTC=$(jq '.data."1".quote.USD.price' ~/Workspace/crypto-script/market-data/crypto-data);
priceETH=$(jq '.data."1027".quote.USD.price' ~/Workspace/crypto-script/market-data/crypto-data);
priceXMR=$(jq '.data."328".quote.USD.price' ~/Workspace/crypto-script/market-data/crypto-data);
# market fluctutations
changeBTC24h=$(jq '.data."1".quote.USD.percent_change_24h' ~/Workspace/crypto-script/market-data/crypto-data | awk '{print int($0)}');
changeBTC7d=$(jq '.data."1".quote.USD.percent_change_7d' ~/Workspace/crypto-script/market-data/crypto-data | awk '{print int($0)}');
changeETH24h=$(jq '.data."1027".quote.USD.percent_change_24h' ~/Workspace/crypto-script/market-data/crypto-data | awk '{print int($0)}');
changeETH7d=$(jq '.data."1027".quote.USD.percent_change_7d' ~/Workspace/crypto-script/market-data/crypto-data | awk '{print int($0)}');
changeXMR24h=$(jq '.data."328".quote.USD.percent_change_24h' ~/Workspace/crypto-script/market-data/crypto-data | awk '{print int($0)}');
changeXMR7d=$(jq '.data."328".quote.USD.percent_change_7d' ~/Workspace/crypto-script/market-data/crypto-data | awk '{print int($0)}');
# fiat rates
eurusd=$(jq '.rates.EURUSD.rate' ~/Workspace/crypto-script/market-data/eurusd);
usdhuf=$(jq '.rates.USDHUF.rate' ~/Workspace/crypto-script/market-data/usdhuf);
usdron=$(jq '.rates.USDRON.rate' ~/Workspace/crypto-script/market-data/usdron);
# eurusd=1.11
# usdhuf=331
# usdron=4.45
# timestamp
timestamp=$(jq '.status.timestamp' ~/Workspace/crypto-script/market-data/crypto-data);

# PERSONAL DATA
# invested values
holdingBTC=$(awk '/BTC/ {sum += $3} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
holdingXMR=$(awk '/XMR/ {sum += $3} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
holdingETH=$(awk '/ETH/ {sum += $3} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
# in EUR
spentOnBTCinEUR=$(awk '/BTC/ {sum += $4} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
spentOnXMRinEUR=$(awk '/XMR/ {sum += $4} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
spentOnETHinEUR=$(awk '/ETH/ {sum += $4} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
spentTotalinEUR=$(awk '{sum += $4} END {print sum}' ~/Workspace/crypto-script/investment-data/purchase-history);
# converted to USD
spentOnBTC=$(echo "$spentOnBTCinEUR * $eurusd / 1;" | bc);
spentOnXMR=$(echo "$spentOnXMRinEUR * $eurusd / 1;" | bc);
spentOnETH=$(echo "$spentOnETHinEUR * $eurusd / 1;" | bc);
spentTotal=$(echo "$spentTotalinEUR * $eurusd / 1;" | bc);

# COMPUTED DATA
currentWorthBTC=$(echo "$priceBTC * $holdingBTC / 1;" | bc | awk '{print int($0)}');
currentWorthXMR=$(echo "$priceXMR * $holdingXMR / 1;" | bc | awk '{print int($0)}');
currentWorthETH=$(echo "$priceETH * $holdingETH / 1;" | bc | awk '{print int($0)}');
currentWorthTotal=$(echo "$currentWorthBTC + $currentWorthXMR + $currentWorthETH / 1;" | bc | awk '{print int($0)}');

differenceBTC=$(echo "$currentWorthBTC - $spentOnBTC / 1;" | bc);
differenceXMR=$(echo "$currentWorthXMR - $spentOnXMR / 1;" | bc);
differenceETH=$(echo "$currentWorthETH - $spentOnETH / 1;" | bc);
differenceTotal=$(echo "$currentWorthTotal - $spentTotal / 1;" | bc);

# OUTPUTTING THE INFORMATION
# title
echo " "; echo -e "\033[5m\033[1m            Barni's Own-Built Crypto Asset Tracker (BOBCAT)\033[0m"; echo " ";
# quotes
echo -e "\033[7m CURRENT MARKET PRICES \033[0m"; echo " ";
echo -e "\033[1m BITCOIN (BTC): \033[0m  \$$priceBTC | 24h: $changeBTC24h% | 7d: $changeBTC7d%";
echo -e "\033[1m MONERO (XMR): \033[0m   \$$priceXMR | 24h: $changeXMR24h% | 7d: $changeXMR7d%";
echo -e "\033[1m ETHEREUM (ETH): \033[0m \$$priceETH | 24h: $changeETH24h% | 7d: $changeETH7d%";
echo " ";

# my bitcoin
echo -e "\033[7m MY BITCOIN \033[0m"; echo " ";
echo -e "\033[1m Holding:  \033[0m       $holdingBTC BTC";
echo -en "\033[1m Bought For:  \033[0m    \$$spentOnBTC | "; echoHUF $spentOnBTC; echo -n " | "; echoRON $spentOnBTC; echo " ";
echo -en "\033[1m Current Worth:  \033[0m \$$currentWorthBTC | "; echoHUF $currentWorthBTC; echo -n " | "; echoRON $currentWorthBTC; echo " ";
echo -en "\033[1m Net Profit:  \033[0m    \$$differenceBTC | "; echoHUF $differenceBTC; echo -n " | "; echoRON $differenceBTC; echo " ";
echo " ";

# my monero
echo -e "\033[7m MY MONERO \033[0m"; echo " ";
echo -e "\033[1m Holding:  \033[0m       $holdingXMR XMR";
echo -en "\033[1m Bought For:  \033[0m    \$$spentOnXMR | "; echoHUF $spentOnXMR; echo -n " | "; echoRON $spentOnXMR; echo " ";
echo -en "\033[1m Current Worth:  \033[0m \$$currentWorthXMR | "; echoHUF $currentWorthXMR; echo -n " | "; echoRON $currentWorthXMR; echo " ";
echo -en "\033[1m Net Profit:  \033[0m    \$$differenceXMR | "; echoHUF $differenceXMR; echo -n " | "; echoRON $differenceXMR; echo " ";
echo " ";

# my ethereum
echo -e "\033[7m MY ETHEREUM \033[0m"; echo " ";
echo -e "\033[1m Holding:  \033[0m       $holdingETH ETH";
echo -en "\033[1m Bought For:  \033[0m    \$$spentOnETH | "; echoHUF $spentOnETH; echo -n " | "; echoRON $spentOnETH; echo " ";
echo -en "\033[1m Current Worth:  \033[0m \$$currentWorthETH | "; echoHUF $currentWorthETH; echo -n " | "; echoRON $currentWorthETH; echo " ";
echo -en "\033[1m Net Profit:  \033[0m    \$$differenceETH | "; echoHUF $differenceETH; echo -n " | "; echoRON $differenceETH; echo " ";
echo " ";

# total investment 
echo -e "\033[7m TOTAL INVESTMENT \033[0m"; echo " ";
echo -en "\033[1m Bought For:  \033[0m    \$$spentTotal | "; echoHUF $spentTotal; echo -n " | "; echoRON $spentTotal; echo " ";
echo -en "\033[1m Current Worth:  \033[0m \$$currentWorthTotal | "; echoHUF $currentWorthTotal; echo -n " | "; echoRON $currentWorthTotal; echo " ";
echo -en "\033[1m Net Profit:  \033[0m    \$$differenceTotal | "; echoHUF $differenceTotal; echo -n " | "; echoRON $differenceTotal; echo " ";
echo " ";

echo -e "\033[3m Last updated: $timestamp \033[0m";
